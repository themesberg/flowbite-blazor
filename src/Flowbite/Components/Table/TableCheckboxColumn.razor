@namespace Flowbite.Components.Table
@typeparam TItem
@inherits FlowbiteComponentBase

<TableHeadCell>
    <input type="checkbox" 
           class="h-4 w-4 rounded border-gray-300 bg-gray-100 text-primary-600 focus:ring-2 focus:ring-primary-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-primary-600"
           checked="@AreAllSelected"
           @onchange="@(e => OnSelectAllChange(e.Value is bool value && value))" />
</TableHeadCell>

@code {
    /// <summary>
    /// Gets or sets the collection of items to be managed by the checkbox column.
    /// </summary>
    [Parameter, EditorRequired]
    public IEnumerable<TItem> Items { get; set; } = Enumerable.Empty<TItem>();

    /// <summary>
    /// Gets or sets the function to determine if an item is selected.
    /// </summary>
    [Parameter, EditorRequired]
    public Func<TItem, bool> IsSelected { get; set; } = _ => false;

    /// <summary>
    /// Gets or sets the action to be performed when an item's selection state changes.
    /// </summary>
    [Parameter, EditorRequired]
    public Action<TItem, bool> OnSelectionChange { get; set; } = (_, __) => { };

    /// <summary>
    /// Gets whether all items are currently selected.
    /// </summary>
    private bool AreAllSelected => Items.Any() && Items.All(item => IsSelected(item));

    private void OnSelectAllChange(bool isChecked)
    {
        foreach (var item in Items)
        {
            OnSelectionChange(item, isChecked);
        }
    }

    protected override void OnParametersSet()
    {
        if (Items is null)
        {
            throw new InvalidOperationException($"The {nameof(Items)} parameter must be set on {nameof(TableCheckboxColumn<TItem>)}");
        }
        if (IsSelected is null)
        {
            throw new InvalidOperationException($"The {nameof(IsSelected)} parameter must be set on {nameof(TableCheckboxColumn<TItem>)}");
        }
        if (OnSelectionChange is null)
        {
            throw new InvalidOperationException($"The {nameof(OnSelectionChange)} parameter must be set on {nameof(TableCheckboxColumn<TItem>)}");
        }
        base.OnParametersSet();
    }
}