@using Flowbite.Base
@inherits OffCanvasComponentBase

@if (IsVisible || Edge)
{
    <div id="@Id" 
         class="@GetDrawerClasses()"
         @onclick:stopPropagation
         @onkeydown="HandleEscapeKey"
         tabindex="-1"
         role="dialog"
         aria-modal="@IsVisible.ToString().ToLower()"
         data-testid="@DataTestId">
        
        <CascadingValue Value="@_drawerContext">
            <CascadingValue Value="@Edge" Name="EdgeMode">
                <CascadingValue Value="@IsVisible" Name="IsVisible">
                    <CascadingValue Value="@Position" Name="Position">
                        @if (!string.IsNullOrEmpty(Title) || HeaderContent != null)
                        {
                            @* Legacy mode - automatically create header/items *@
                            <DrawerHeader>
                                @(HeaderContent ?? (Title != null ? new RenderFragment(builder => 
                                {
                                    builder.AddContent(0, Title);
                                }) : null))
                            </DrawerHeader>
                            
                            <DrawerItems>
                                @ChildContent
                            </DrawerItems>
                        }
                        else
                        {
                            @* New compound component mode *@
                            @ChildContent
                        }
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </CascadingValue>
        
        @if (Dismissible)
        {
            <button type="button" 
                    class="absolute end-2.5 top-2.5 flex h-8 w-8 items-center justify-center rounded-lg bg-transparent text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900 dark:hover:bg-gray-600 dark:hover:text-white"
                    @onclick="HandleCloseClick"
                    aria-label="Close">
                <svg class="h-4 w-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                </svg>
            </button>
        }
    </div>
    
    @if (IsVisible && Backdrop)
    {
        <div class="fixed inset-0 z-[60] bg-gray-900/50 dark:bg-gray-900/80" 
             @onclick="HandleBackdropClick"></div>
    }
}
