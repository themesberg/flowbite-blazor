@namespace Flowbite.Components
@inherits ComponentBase

<!-- Base Toast Element -->
<div @ref="_toastElement" id="@($"toast-{ToastMessage.Id}")" class="@GetToastClasses()" role="alert">
    <div class="flex items-center">
        @* Optional Icon based on Type *@
        @if (!string.IsNullOrEmpty(_iconClass))
        {
            <div class="@GetIconContainerClasses()">
                <i class="@_iconClass"></i> <!-- Assuming Font Awesome -->
                <span class="sr-only">@($"{ToastMessage.Type} icon")</span>
            </div>
        }

        @* Toast Message Content *@
        <div class="ms-3 text-sm font-normal">
            @((MarkupString)ToastMessage.Message) <!-- Render as MarkupString to allow HTML -->
        </div>

        @* Optional Close Button *@
        @if (CloseButton)
        {
            <button type="button" class="@_closeButtonClass" data-dismiss-target="#@($"toast-{ToastMessage.Id}")" aria-label="Close" @onclick="CloseToast">
                <span class="sr-only">Close</span>
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
            </button>
        }
    </div>
</div>

<!-- Basic CSS for fade animations - Consider moving to a central CSS file -->
<style>
    .toast-fade-in {
        animation: fadeIn 0.3s ease-out forwards;
    }

    .toast-fade-out {
        animation: fadeOut 0.3s ease-in forwards;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(-10px); }
    }
</style>
