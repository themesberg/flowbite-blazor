@page "/docs/components/quickgrid"
@using Flowbite.Components
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Components.Forms
@using DemoApp.Services
@using DemoApp.Data
@inject PokemonService PokemonService

<PageTitle>QuickGrid - Flowbite Blazor</PageTitle>

<main class="p-6 space-y-4 max-w-4xl">
    <h2 class="text-2xl font-bold">QuickGrid Examples</h2>

    <p>Leverage the Microsoft's QuickGrid Blazor componet and achieve Flowbite styling by applying the
    <em class="text-primary-700 dark:text-primary-100">flowbite-grid</em> CSS class and the
    <em class="text-primary-700 dark:text-primary-100">Theme="flowbite".</em>
    </p>

    @{
        var example = @"<div class=""grid flowbite-grid"">
    <QuickGrid Theme=""flowbite"">
</div>";
    }
    <CodeBlock Code="@example" Language="razor" class="dark:bg-gray-900 text-xs border border-gray-500 p-2"/>


    <div class="space-y-8">
        <ComponentExample Title="Basic Grid"
                         Description="A simple grid showing Pokemon data with basic columns."
                         RazorCode=@(@"<div class=""grid flowbite-grid text-xs"">
    <QuickGrid Items=""@_pokemon"" Theme=""flowbite"">
        <PropertyColumn Property=""@(p => p.Id)"" Title=""#"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Name)"" Title=""Name"" />
        <PropertyColumn Property=""@(p => p.Type1)"" Title=""Type"" />
        <PropertyColumn Property=""@(p => p.HP)"" Title=""HP"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Attack)"" Title=""Attack"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Defense)"" Title=""Defense"" Align=""Align.Center"" />
    </QuickGrid>
</div>")
                         SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                <div class="grid flowbite-grid text-xs">
                    <QuickGrid Items="@_pokemon" Theme="flowbite">
                        <PropertyColumn Property="@(p => p.Id)" Title="#" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Name)" Title="Name" />
                        <PropertyColumn Property="@(p => p.Type1)" Title="Type" />
                        <PropertyColumn Property="@(p => p.HP)" Title="HP" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Attack)" Title="Attack" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Defense)" Title="Defense" Align="Align.Center" />
                    </QuickGrid>
                </div>
            </PreviewContent>
        </ComponentExample>

        <ComponentExample Title="Sorting and Filtering"
                         Description="Grid with sortable columns and name filtering capability."
                         RazorCode=@(@"<div class=""grid flowbite-grid text-xs"">
    <QuickGrid Items=""@FilteredPokemon"" Theme=""flowbite"">
        <PropertyColumn Property=""@(p => p.Id)"" Title=""#"" Sortable=""true"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Name)"" Title=""Name"" Sortable=""true"">
            <ColumnOptions>
                <div class=""search-box"">
                    <input type=""search"" autofocus @bind=""_nameFilter"" @bind:event=""oninput"" placeholder=""Search..."" />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property=""@(p => p.Type1)"" Title=""Type"" Sortable=""true"" />
        <PropertyColumn Property=""@(p => p.HP)"" Title=""HP"" Sortable=""true"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Attack)"" Title=""Attack"" Sortable=""true"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Defense)"" Title=""Defense"" Sortable=""true"" Align=""Align.Center"" />
    </QuickGrid>
</div>")
                         SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                
                <div class="grid flowbite-grid text-xs">
                    <QuickGrid Items="@FilteredPokemon" Theme="flowbite">
                        <PropertyColumn Property="@(p => p.Id)" Title="#" Sortable="true" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Name)" Title="Name" Sortable="true">
                            <ColumnOptions>
                                <div class="search-box">
                                    <input type="search" autofocus @bind="_nameFilter" @bind:event="oninput" placeholder="Search..." />
                                </div>
                            </ColumnOptions>
                        </PropertyColumn>
                        <PropertyColumn Property="@(p => p.Type1)" Title="Type" Sortable="true" />
                        <PropertyColumn Property="@(p => p.HP)" Title="HP" Sortable="true" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Attack)" Title="Attack" Sortable="true" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Defense)" Title="Defense" Sortable="true" Align="Align.Center" />
                    </QuickGrid>
                </div>
            </PreviewContent>
        </ComponentExample>

        <ComponentExample Title="Template Columns"
                         Description="Custom column templates for enhanced visualization of Pokemon types and stats."
                         RazorCode=@(@"<div class=""grid flowbite-grid text-xs"">
    <QuickGrid Items=""@_pokemon"" Theme=""flowbite"">
        <PropertyColumn Property=""@(p => p.Id)"" Title=""#"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Name)"" Title=""Name"" />
        <TemplateColumn Title=""Types"">
            <div class=""flex gap-2"">
                <span class=""@GetTypeClass(context.Type1)"">@context.Type1</span>
                @if (!string.IsNullOrEmpty(context.Type2))
                {
                    <span class=""@GetTypeClass(context.Type2)"">@context.Type2</span>
                }
            </div>
        </TemplateColumn>
        <TemplateColumn Title=""Stats"">
            <div class=""flex flex-col gap-1"">
                <div class=""flex items-center gap-2"">
                    <span class=""w-16 text-sm"">HP: @context.HP</span>
                    <div class=""w-32 bg-gray-200 rounded-full h-2"">
                        <div class=""bg-green-600 h-2 rounded-full"" style=""width: @(context.HP * 100 / 255)%""></div>
                    </div>
                </div>
                <div class=""flex items-center gap-2"">
                    <span class=""w-16 text-sm"">Attack: @context.Attack</span>
                    <div class=""w-32 bg-gray-200 rounded-full h-2"">
                        <div class=""bg-red-600 h-2 rounded-full"" style=""width: @(context.Attack * 100 / 255)%""></div>
                    </div>
                </div>
            </div>
        </TemplateColumn>
    </QuickGrid>
</div>")
                         SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                <div class="h-96">
                    <div class="grid flowbite-grid h-96">
                        <QuickGrid Items="@_pokemon" Theme="flowbite">
                            <PropertyColumn Property="@(p => p.Id)" Title="#" Align="Align.Center" />
                            <PropertyColumn Property="@(p => p.Name)" Title="Name" />
                            <TemplateColumn Title="Types">
                                <div class="flex gap-2">
                                    <span class="@GetTypeClass(context.Type1)">@context.Type1</span>
                                    @if (!string.IsNullOrEmpty(context.Type2))
                                    {
                                        <span class="@GetTypeClass(context.Type2)">@context.Type2</span>
                                    }
                                </div>
                            </TemplateColumn>
                            <TemplateColumn Title="Stats">
                                <div class="flex flex-col gap-1">
                                    <div class="flex items-center gap-2 space-x-3">
                                        <span class="w-16 text-sm whitespace-nowrap">HP: @context.HP</span>
                                        <div class="w-32 bg-gray-200 rounded-full h-2">
                                            <div class="bg-green-600 h-2 rounded-full" style="width: @(context.HP * 100 / 255)%"></div>
                                        </div>
                                    </div>
                                    <div class="flex items-center gap-2 space-x-3">
                                        <span class="w-16 text-sm whitespace-nowrap">Attack: @context.Attack</span>
                                        <div class="w-32 bg-gray-200 rounded-full h-2">
                                            <div class="bg-red-600 h-2 rounded-full" style="width: @(context.Attack * 100 / 255)%"></div>
                                        </div>
                                    </div>
                                </div>
                            </TemplateColumn>
                        </QuickGrid>
                    </div>
                </div>
            </PreviewContent>
        </ComponentExample>

        <ComponentExample Title="Paging"
                         Description="Grid with pagination support and page size selection."
                         RazorCode=@(@"<div class=""grid flowbite-grid text-xs"">
    <QuickGrid Theme=""flowbite"" Items=""@_pokemon"" Pagination=""@_pagination"">
        <PropertyColumn Property=""@(p => p.Id)"" Title=""#"" Sortable=""true"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Name)"" Title=""Name"" Sortable=""true"" />
        <PropertyColumn Property=""@(p => p.Type1)"" Title=""Type"" Sortable=""true"" />
        <PropertyColumn Property=""@(p => p.HP)"" Title=""HP"" Sortable=""true"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Attack)"" Title=""Attack"" Sortable=""true"" Align=""Align.Center"" />
        <PropertyColumn Property=""@(p => p.Defense)"" Title=""Defense"" Sortable=""true"" Align=""Align.Center"" />
    </QuickGrid>
    <Paginator State=""@_pagination"" />
</div>")
                         SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                <div class="grid flowbite-grid text-xs">
                    <QuickGrid Items="@_pokemon" Pagination="@_pagination" Theme="flowbite">
                        <PropertyColumn Property="@(p => p.Id)" Title="#" Sortable="true" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Name)" Title="Name" Sortable="true" />
                        <PropertyColumn Property="@(p => p.Type1)" Title="Type" Sortable="true" />
                        <PropertyColumn Property="@(p => p.HP)" Title="HP" Sortable="true" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Attack)" Title="Attack" Sortable="true" Align="Align.Center" />
                        <PropertyColumn Property="@(p => p.Defense)" Title="Defense" Sortable="true" Align="Align.Center" />
                    </QuickGrid>
                    <Paginator State="@_pagination" />
                </div>    
                
            </PreviewContent>
        </ComponentExample>
    </div>
</main>

@code {
    private IQueryable<Pokemon> _pokemon = default!;
    private string _nameFilter = string.Empty;
    private PaginationState _pagination = new() { ItemsPerPage = 5 };
    private int _pageSize
    {
        get => _pagination.ItemsPerPage;
        set => _pagination.ItemsPerPage = value;
    }

    private IQueryable<Pokemon> FilteredPokemon =>
        string.IsNullOrEmpty(_nameFilter)
            ? _pokemon
            : _pokemon.Where(p => p.Name.Contains(_nameFilter, StringComparison.OrdinalIgnoreCase));

    protected override void OnInitialized()
    {
        _pokemon = PokemonService.GetPokemon();
    }

    private string GetTypeClass(string type) => type.ToLower() switch
    {
        "normal" => "px-2 py-1 text-xs font-medium rounded bg-gray-300 text-gray-800",
        "fire" => "px-2 py-1 text-xs font-medium rounded bg-red-500 text-white",
        "water" => "px-2 py-1 text-xs font-medium rounded bg-blue-500 text-white",
        "electric" => "px-2 py-1 text-xs font-medium rounded bg-yellow-400 text-gray-800",
        "grass" => "px-2 py-1 text-xs font-medium rounded bg-green-500 text-white",
        "ice" => "px-2 py-1 text-xs font-medium rounded bg-blue-200 text-gray-800",
        "fighting" => "px-2 py-1 text-xs font-medium rounded bg-red-700 text-white",
        "poison" => "px-2 py-1 text-xs font-medium rounded bg-purple-500 text-white",
        "ground" => "px-2 py-1 text-xs font-medium rounded bg-yellow-600 text-white",
        "flying" => "px-2 py-1 text-xs font-medium rounded bg-indigo-400 text-white",
        "psychic" => "px-2 py-1 text-xs font-medium rounded bg-pink-500 text-white",
        "bug" => "px-2 py-1 text-xs font-medium rounded bg-lime-500 text-white",
        "rock" => "px-2 py-1 text-xs font-medium rounded bg-yellow-800 text-white",
        "ghost" => "px-2 py-1 text-xs font-medium rounded bg-purple-700 text-white",
        "dragon" => "px-2 py-1 text-xs font-medium rounded bg-indigo-600 text-white",
        "dark" => "px-2 py-1 text-xs font-medium rounded bg-gray-700 text-white",
        "steel" => "px-2 py-1 text-xs font-medium rounded bg-gray-400 text-gray-800",
        "fairy" => "px-2 py-1 text-xs font-medium rounded bg-pink-300 text-gray-800",
        _ => "px-2 py-1 text-xs font-medium rounded bg-gray-200 text-gray-800"
    };
}
