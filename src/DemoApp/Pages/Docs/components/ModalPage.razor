@page "/docs/components/modal"

<PageTitle>Modal - Flowbite Blazor</PageTitle>

<main class="p-6 space-y-4 max-w-4xl">
    <h2>Modal Examples</h2>

    <div class="space-y-8">
        
        <ComponentExample 
            Title="Default Modal"
            Description="The modal component can be used to show any type of content such as text, form elements, and notifications to your website visitors by creating an off-canvas box on top of the main content area of your website."
            RazorCode="@(
@"<div>
    <Button OnClick=""@(() => showDefaultModal = true)"">Open Modal</Button>
    
    <Modal Show=""showDefaultModal"" ShowChanged=""(value) => showDefaultModal = value"">
        <ModalHeader>
            <h3>Terms of Service</h3>
        </ModalHeader>
        <ModalBody>
            <div class=""space-y-6"">
                <p class=""text-base leading-relaxed text-gray-500 dark:text-gray-400"">
                    With less than a month to go before the European Union enacts new consumer privacy laws for its citizens,
                    companies around the world are updating their terms of service agreements to comply.
                </p>
                <p class=""text-base leading-relaxed text-gray-500 dark:text-gray-400"">
                    The European Union's General Data Protection Regulation (G.D.P.R.) goes into effect on May 25 and is meant
                    to ensure a common set of data rights in the European Union. It requires organizations to notify users as
                    soon as possible of high-risk data breaches that could personally affect them.
                </p>
            </div>
        </ModalBody>
        <ModalFooter>
            <div class=""flex justify-end w-full"">
                <Button OnClick=""@(() => showDefaultModal = false)"" Color=""ButtonColor.Gray"" class=""mr-2"">Decline</Button>
                <Button OnClick=""@(() => showDefaultModal = false)"">Accept</Button>
            </div>
        </ModalFooter>
    </Modal>
</div>

@code {
    private bool showDefaultModal = false;
}")"
            SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                <div>
                    <Button OnClick="@(() => showDefaultModal = true)">Open Modal</Button>
                    
                    <Modal Show="showDefaultModal" ShowChanged="(value) => showDefaultModal = value">
                        <ModalHeader>
                            <h3>Terms of Service</h3>
                        </ModalHeader>
                        <ModalBody>
                            <div class="space-y-6">
                                <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
                                    With less than a month to go before the European Union enacts new consumer privacy laws for its citizens,
                                    companies around the world are updating their terms of service agreements to comply.
                                </p>
                                <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
                                    The European Union's General Data Protection Regulation (G.D.P.R.) goes into effect on May 25 and is meant
                                    to ensure a common set of data rights in the European Union. It requires organizations to notify users as
                                    soon as possible of high-risk data breaches that could personally affect them.
                                </p>
                            </div>
                        </ModalBody>
                        <ModalFooter>
                            <div class="flex justify-end w-full">
                                <Button OnClick="@(() => showDefaultModal = false)" Color="ButtonColor.Gray" class="mr-2">Decline</Button>
                                <Button OnClick="@(() => showDefaultModal = false)">Accept</Button>
                            </div>
                        </ModalFooter>
                    </Modal>
                </div>
            </PreviewContent>
        </ComponentExample>

        <ComponentExample 
            Title="Form in Modal"
            Description="Modals are perfect for containing forms that require user input. This example shows a simple login form inside a modal."
            RazorCode="@(
@"<div>
    <Button OnClick=""@(() => showFormModal = true)"">Open Form Modal</Button>
    
    <Modal Show=""showFormModal"" ShowChanged=""(value) => showFormModal = value"">
        <ModalHeader>
            <h3>Sign In</h3>
        </ModalHeader>
        <ModalBody>
            <div class=""space-y-4"">
                <div>
                    <label for=""email"" class=""block mb-2 text-sm font-medium text-gray-900 dark:text-white"">Email</label>
                    <input type=""email"" id=""email"" class=""bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"" placeholder=""name@company.com"" required />
                </div>
                <div>
                    <label for=""password"" class=""block mb-2 text-sm font-medium text-gray-900 dark:text-white"">Password</label>
                    <input type=""password"" id=""password"" class=""bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"" required />
                </div>
                <div class=""flex items-center"">
                    <input id=""remember"" type=""checkbox"" class=""w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"" />
                    <label for=""remember"" class=""ml-2 text-sm font-medium text-gray-900 dark:text-gray-300"">Remember me</label>
                </div>
            </div>
        </ModalBody>
        <ModalFooter>
            <div class=""flex justify-end w-full"">
                <Button OnClick=""@(() => showFormModal = false)"" Color=""ButtonColor.Gray"" class=""mr-2"">Cancel</Button>
                <Button OnClick=""@(() => showFormModal = false)"">Sign In</Button>
            </div>
        </ModalFooter>
    </Modal>
</div>

@code {
    private bool showFormModal = false;
}")"
            SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                <div>
                    <Button OnClick="@(() => showFormModal = true)">Open Form Modal</Button>
                    
                    <Modal Show="showFormModal" ShowChanged="(value) => showFormModal = value">
                        <ModalHeader>
                            <h3>Sign In</h3>
                        </ModalHeader>
                        <ModalBody>
                            <div class="space-y-4">
                                <div>
                                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
                                    <input type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name@company.com" required />
                                </div>
                                <div>
                                    <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
                                    <input type="password" id="password" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
                                </div>
                                <div class="flex items-center">
                                    <input id="remember" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" />
                                    <label for="remember" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Remember me</label>
                                </div>
                            </div>
                        </ModalBody>
                        <ModalFooter>
                            <div class="flex justify-end w-full">
                                <Button OnClick="@(() => showFormModal = false)" Color="ButtonColor.Gray" class="mr-2">Cancel</Button>
                                <Button OnClick="@(() => showFormModal = false)">Sign In</Button>
                            </div>
                        </ModalFooter>
                    </Modal>
                </div>
            </PreviewContent>
        </ComponentExample>

        <ComponentExample 
            Title="Non-Dismissible Modal"
            Description="Create a modal that can only be closed by clicking a specific button, not by clicking outside or pressing Escape."
            RazorCode="@(
@"<div>
    <Button OnClick=""@(() => showNonDismissibleModal = true)"" Color=""ButtonColor.Red"">Critical Action</Button>
    
    <Modal Show=""showNonDismissibleModal"" ShowChanged=""(value) => showNonDismissibleModal = value"" 
           Dismissible=""false"">
        <ModalHeader>
            <h3>Confirm Action</h3>
        </ModalHeader>
        <ModalBody>
            <p class=""text-base leading-relaxed text-gray-500 dark:text-gray-400"">
                This is a non-dismissible modal. You must click one of the buttons below to close it.
                Clicking outside the modal or pressing Escape will not close it.
            </p>
        </ModalBody>
        <ModalFooter>
            <div class=""flex justify-end w-full"">
                <Button OnClick=""@(() => showNonDismissibleModal = false)"" Color=""ButtonColor.Gray"" class=""mr-2"">Cancel</Button>
                <Button OnClick=""@(() => showNonDismissibleModal = false)"" Color=""ButtonColor.Red"">Confirm</Button>
            </div>
        </ModalFooter>
    </Modal>
</div>

@code {
    private bool showNonDismissibleModal = false;
}")"
            SupportedLanguages="@(new[] { "razor" })">
            <PreviewContent>
                <div>
                    <Button OnClick="@(() => showNonDismissibleModal = true)" Color="ButtonColor.Red">Critical Action</Button>
                    
                    <Modal Show="showNonDismissibleModal" ShowChanged="(value) => showNonDismissibleModal = value" 
                           Dismissible="false">
                        <ModalHeader>
                            <h3>Confirm Action</h3>
                        </ModalHeader>
                        <ModalBody>
                            <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
                                This is a non-dismissible modal. You must click one of the buttons below to close it.
                                Clicking outside the modal or pressing Escape will not close it.
                            </p>
                        </ModalBody>
                        <ModalFooter>
                            <div class="flex justify-end w-full">
                                <Button OnClick="@(() => showNonDismissibleModal = false)" Color="ButtonColor.Gray" class="mr-2">Cancel</Button>
                                <Button OnClick="@(() => showNonDismissibleModal = false)" Color="ButtonColor.Red">Confirm</Button>
                            </div>
                        </ModalFooter>
                    </Modal>
                </div>
            </PreviewContent>
        </ComponentExample>

        


    </div>
</main>

@code {
    private bool showDefaultModal = false;
    private bool showNonDismissibleModal = false;
    private bool showFormModal = false;
    
    [Inject] private IModalService ModalService { get; set; } = default!;
    
    private async Task ShowProgrammaticModal()
    {
        var options = new ModalOptions
        {
            Title = "Programmatic Modal",
            Size = ModalSize.Large
        };
        
        var result = await ModalService.ShowAsync<string>(
            "Programmatic Modal",
            builder =>
            {
                builder.AddContent(0, 
                    @<div>
                        <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
                            This modal was created programmatically using the ModalService.
                        </p>
                        <div class="flex justify-end mt-4">
                            <Button OnClick="@(() => ModalService.Close("Success"))">Close with Result</Button>
                        </div>
                    </div>
                );
            },
            options
        );
        
        if (result.Confirmed && result.Data != null)
        {
            // Handle the result
            Console.WriteLine($"Modal closed with result: {result.Data}");
        }
    }
}
